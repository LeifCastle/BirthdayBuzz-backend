#! /app/.heroku/node/bin/node

const dotenv = require("dotenv");
dotenv.config({ path: "../.env" });
const sgMail = require("@sendgrid/mail");
const { User } = require("../models");

sgMail.setApiKey(process.env.SENDGRID_API_KEY);

function getUsers() {
  const today = new Date().toLocaleDateString().slice(0, -5);
  console.log("Current Date: ", today);
  User.find()
    .then((allUsers) => {
      allUsers.forEach((user) => {
        console.log(
          `In User: ${user.firstName} ${user.lastName} local timezone is ${user.timezone} requested Buzz Time is ${user.buzzTime}`
        );
        user.buzzList.forEach((entry) => {
          let endSlice = entry.birthday.slice(0, -5);
          let beginSlice = endSlice.slice(1);
          console.log(`${entry.name}'s birthday is on ${beginSlice}`);
          if (beginSlice === today) {
            console.log(`--Birthday Match`);
            console.log(`Send reminder at ${user.buzzTime} ${user.timezone}`);

            //Create a new Date for correct time to send email
            const currentDate = new Date();
            let hours;
            switch (user.timezone) {
              case "UTC":
                hours = user.buzzTime;
                break;
              case "EST":
                hours = user.buzzTime + 5;
                break;
              case "CST":
                hours = user.buzzTime + 6;
                break;
              case "MST":
                hours = user.buzzTime + 7;
                break;
              case "PST":
                hours = user.buzzTime + 8;
                break;
            }
            currentDate.setHours(hours);
            currentDate.setMinutes(44);
            // Convert the current date to a Unix timestamp
            const unixTimestamp = Math.floor(currentDate.getTime() / 1000);
            console.log("TS", unixTimestamp);
            sendScheduledEmail(
              user.email,
              user.firstName,
              entry.message,
              unixTimestamp
            ); //Need to also pass user time of day sending preference as a parameter
          }
        });
      });
    })
    .catch((error) => {
      console.log("Error finding all users: ", error);
    });
}

async function sendScheduledEmail(address, name, message, unixTimestamp) {
  const data = {
    from: {
      email: "birthday.buzzx@gmail.com",
      name: "Birthday Buzz",
    },
    to: [
      {
        email: address,
        name: name,
      },
    ],
    subject: "Birthday Reminder!", //Future Feature: Let user customize this
    text: message,
    send_at: parseInt(unixTimestamp),
  };

  const response = await sgMail.send(data);
  if (response[0].statusCode === 202) {
    console.log("Email scheduled successfully!");
  } else {
    console.log("Error --> Status Code: ", response[0].statusCode);
  }
}

getUsers();
